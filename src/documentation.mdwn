[[!toc startlevel="3" levels="1"]]
<div class="clear"></div>

---


### Users

#### Building the source package

If you're on unix, you should check if your distribution offers a package
for pepper first (see the [[Download]] page for a list of packages). If
it doesn't, you need to grab a source tarball from the [[Download]]
page and extract it using tar:

	$ tar xvzf pepper-0.2.tar.gz
	$ cd pepper-0.2

Next, you should make sure that all compile-time dependencies are
satisfied. In general, you'll need a C++ compiler and Lua 5.1 (e.g.,
provided by `lua5.1` and `liblua5.1-dev` on Debian). Some backends have
additional dependencies that can be found in the [README](README) file.

pepper's build system uses
[Autoconf](http://www.gnu.org/software/autoconf) and
[Automake](http://www.gnu.org/software/automake), so configuration and
installation is accomplished with

	$ ./configure
	$ make
	# make install

The configuration script will print a feature summary after its job has
been finished.  A detailed listing of available backends and optional
features can be found in pepper's [README](README) file.


#### Basic usage

pepper's command line syntax is printed to your terminal if you pass
`--help` (as a main option) to the program:

	$ pepper [options] [report] [report options] <repository>

As a short example, you can generate a graph visualizing the lines of
code in your repository located at `/home/joe/myrepo` by running

	$ pepper loc /home/joe/myrepo > loc.svg

The command-line options for the current report and backend can be
printed by passing `help` as a main option:

	$ pepper --help loc /home/joe/myrepo

For example, if you want to render the LOC graph including tag markers
into a 800x600 PNG file and also watch more detailed progress information,
you will run

	$ pepper --verbose loc --tags --output=loc.png --size=800x600 /home/joe/myrepo

Some options can be abbreviated as shown in the help screen:

	$ pepper -v loc --tags -oloc.png -s800x600 /home/joe/myrepo

The built-in reports can be listed by passing `--list-reports` to
the program.  Your might also want to take a look at the [[scripting
guide|ScriptingGuide]] to learn how to write your own custom reports.

#### Man page

An online version of pepper's man page is available [[here|manpage]].

---

### Developers

#### Scripting tutorial

In pepper, reports are scripts written in [Lua](http://www.lua.org). A short
tutorial for writing custom reports is available at [[ScriptingGuide]].

#### API reference

An API reference for Lua scripts is available [here](api/). It has been
generated with [LuaDoc](http://luadoc.luaforge.net).

#### Source code repository

pepper's [Git](http://git-scm.com) repository is hosted at
[GitHub](http://github.com/jgehring/pepper). Public read-only access is
provided, so you can get your local copy using

	$ git clone git://github.com/jgehring/pepper

<!-- TODO
#### Implementing a new SCM backend

There's also a short guide for implementing new backends at
[[BackendImplementation]].
-->
