pepper - SCM statistics report generator
========================================

About
-----
pepper is a flexible statistics generator for source code management
repositories. It can be used to create graphical or textual reports,
independent from the actual SCM software used.

It comes with several built-in reports, but custom reports can be easily
written using the Lua scripting language. A basic Lua interface to
Gnuplot is provided and can be used to plot repository data graphically.

This README file contains brief installation and usage
instructions. Additional documentation is available at
http://scm-pepper.sourceforge.net.


Requirements
------------
First, you need a working C++ compiler and standard library. Furthermore,
pepper depends on the following third-party software:

	* zlib
	* POSIX threads
	* Lua >= 5.1

The following dependencies are optional:

	* Python C API and the Mercurial modules (for the Mercurial backend)
	* Subversion C API (for the Subversion backend)

Additionally, the following programs may be required at runtime:

	* The standard Git command line client (for the Git backend)
	* Gnuplot (for scripts producing plots)

pepper has been written in a hopefully platform-independent manner,
and should compile and run on all major Unix platforms, e.g. Linux,
BSD and Mac OS X. I'm not planning to work too hard on a Windows port.


Compilation
-----------
pepper uses the Autoconf and Automake build systems, so the standard
way of running

	$ ./configure
	$ make
	$ make install

should be fine. You can pass "--help" to the configuration script for
a brief version of the next two sections.


Usage notes
-----------
As of now, there is no man page for pepper. However, the command line
syntax and a brief help screen are shown if you run the program with
"--help" or invalid arguments.


Available SCM backends
----------------------
pepper ships with the following backends. The respective command line
switches for the configuration script are given in brackets.

	* Git (--[en|dis]able-git)
	The Git backend uses uses the standard git command line client.

	* Subversion (--[en|dis]able-svn)
	This backend uses the Subversion C API to access the respective
	repositories. All access methods provided by the API are supported,
	e.g. file://, http:// or svn://.

	* Mercurial (--[en|dis]able-mercurial)
	The hg backend uses the Python C API to access Mercurial's
	python interface directly.


Optional features
-----------------
Several additional, optional features are available (see the CREDITS
file for more information about the respective libraries)

	* Gnuplot interface (--[en|dis]able-gnuplot)
	A Lua interface to Gnuplot. Reports can use it to plot data
	graphically.
	This feature is enabled by default.


Built-in reports
----------------
When installing pepper, several report scripts will be copied to the
respective shared folder (i.e. $prefix/share/pepper) and can be accessed
by their filename. Reports producing a plot will open a X11 window if
possible or print it to standard output by default.

Report-specific command-line options will be printed if "--help" is
being passed as a program option.

Here's a brief listing:

	* authors
	Plots the contributed lines of code of the 6 busiest authors.

	* branches
	Prints all repository branches, similar to "git branch -a".

	* commit_scatter
	Generates a scatter plot visualizing commit activity per daytime.

	* commits_per_month
	Plots a histogram of the commits during the last 12 months.
	
	* loc
	Plots the lines of code for a given branch.

	* shortlog
	Prints a revision log to stdout, similar to "git shortlog".

	* diffstat
	Prints a diffstat of a given revision.

	* directories
	Plots the directory sizes for the 6 largest directories.

	* filetypes
	Plots a histogram visualizing the number of files per type.


License
-------
pepper - SCM statistics report generator
Copyright (C) 2010-2011 Jonas Gehring

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
